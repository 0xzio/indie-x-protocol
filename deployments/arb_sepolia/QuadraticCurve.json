{
  "address": "0x825FAaB110408F092c2574cB1786f3A9B4648201",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "args",
          "type": "uint256[]"
        }
      ],
      "name": "curve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "amount",
          "type": "uint32"
        },
        {
          "internalType": "uint256[]",
          "name": "args",
          "type": "uint256[]"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xb591876e1374e21e3efede99384583bd129e80343e8537614d8490fcc0096b17",
  "receipt": {
    "to": null,
    "from": "0x7FEA6971Eb1663623690Edbb779a05DD9440d824",
    "contractAddress": "0x825FAaB110408F092c2574cB1786f3A9B4648201",
    "transactionIndex": 3,
    "gasUsed": "1105866",
    "logsBloom": "0x
    "blockHash": "0x59e3f8850f563d25f4e55ab1bd1aa4505daf6c8ce1e52e03a96ba4a74dbfa1eb",
    "transactionHash": "0xb591876e1374e21e3efede99384583bd129e80343e8537614d8490fcc0096b17",
    "logs": [],
    "blockNumber": 64020914,
    "cumulativeGasUsed": "3167880",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 4,
  "solcInputHash": "70214a46d98787624ff0973eff94b1a4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"args\",\"type\":\"uint256[]\"}],\"name\":\"curve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"amount\",\"type\":\"uint32\"},{\"internalType\":\"uint256[]\",\"name\":\"args\",\"type\":\"uint256[]\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/curves/QuadraticCurve.sol\":\"QuadraticCurve\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":4294967295},\"remappings\":[]},\"sources\":{\"contracts/curves/QuadraticCurve.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"../interfaces/ICurve.sol\\\";\\n\\ncontract QuadraticCurve is ICurve {\\n  function getPrice(uint256 supply, uint32 amount, uint256[] calldata args) external pure returns (uint256) {\\n    uint256 totalPrice = 0;\\n\\n    for (uint256 i = 1; i <= amount; i++) {\\n      totalPrice += curve(supply + i, args);\\n    }\\n    return totalPrice;\\n  }\\n\\n  function curve(uint256 x, uint256[] memory args) public pure returns (uint256) {\\n    uint256 len = args.length;\\n    uint256 a = len > 0 ? args[0] : 10 ** 18 / 16000;\\n    uint256 b = len > 1 ? args[1] : 0;\\n    return a * x * x + b;\\n  }\\n}\\n\",\"keccak256\":\"0xe1952b7b78914d74f9da3ba7cd2ad0528631b35fd64903454ae92720b318efb1\",\"license\":\"MIT\"},\"contracts/interfaces/ICurve.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\ninterface ICurve {\\n  function getPrice(uint256 supply, uint32 amount, uint256[] calldata args) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xee03cf9d4b3aff0f29667342a82a3ee11b409080aaae47aa784bf52e6a91ee94\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610426806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063c30fcf4b1461003b578063d8c3e83b14610060575b600080fd5b61004e6100493660046101b3565b610073565b60405190815260200160405180910390f35b61004e61006e36600461029b565b610103565b8051600090818161008a576538d7ea4c68006100a6565b8360008151811061009d5761009d610330565b60200260200101515b90506000600183116100b95760006100d5565b846001815181106100cc576100cc610330565b60200260200101515b905080866100e3818561038e565b6100ed919061038e565b6100f791906103a5565b93505050505b92915050565b60008060015b8563ffffffff16811161017a5761015c61012382896103a5565b86868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061007392505050565b61016690836103a5565b915080610172816103b8565b915050610109565b5095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080604083850312156101c657600080fd5b8235915060208084013567ffffffffffffffff808211156101e657600080fd5b818601915086601f8301126101fa57600080fd5b81358181111561020c5761020c610184565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110858211171561024f5761024f610184565b60405291825284820192508381018501918983111561026d57600080fd5b938501935b8285101561028b57843584529385019392850192610272565b8096505050505050509250929050565b600080600080606085870312156102b157600080fd5b84359350602085013563ffffffff811681146102cc57600080fd5b9250604085013567ffffffffffffffff808211156102e957600080fd5b818701915087601f8301126102fd57600080fd5b81358181111561030c57600080fd5b8860208260051b850101111561032157600080fd5b95989497505060200194505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820281158282048414176100fd576100fd61035f565b808201808211156100fd576100fd61035f565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036103e9576103e961035f565b506001019056fea2646970667358221220503d3bd28afb709aa47774a1dd3dfdfdfb1f5d72cfa196667b6a547a03ad078664736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063c30fcf4b1461003b578063d8c3e83b14610060575b600080fd5b61004e6100493660046101b3565b610073565b60405190815260200160405180910390f35b61004e61006e36600461029b565b610103565b8051600090818161008a576538d7ea4c68006100a6565b8360008151811061009d5761009d610330565b60200260200101515b90506000600183116100b95760006100d5565b846001815181106100cc576100cc610330565b60200260200101515b905080866100e3818561038e565b6100ed919061038e565b6100f791906103a5565b93505050505b92915050565b60008060015b8563ffffffff16811161017a5761015c61012382896103a5565b86868080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061007392505050565b61016690836103a5565b915080610172816103b8565b915050610109565b5095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080604083850312156101c657600080fd5b8235915060208084013567ffffffffffffffff808211156101e657600080fd5b818601915086601f8301126101fa57600080fd5b81358181111561020c5761020c610184565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110858211171561024f5761024f610184565b60405291825284820192508381018501918983111561026d57600080fd5b938501935b8285101561028b57843584529385019392850192610272565b8096505050505050509250929050565b600080600080606085870312156102b157600080fd5b84359350602085013563ffffffff811681146102cc57600080fd5b9250604085013567ffffffffffffffff808211156102e957600080fd5b818701915087601f8301126102fd57600080fd5b81358181111561030c57600080fd5b8860208260051b850101111561032157600080fd5b95989497505060200194505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80820281158282048414176100fd576100fd61035f565b808201808211156100fd576100fd61035f565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036103e9576103e961035f565b506001019056fea2646970667358221220503d3bd28afb709aa47774a1dd3dfdfdfb1f5d72cfa196667b6a547a03ad078664736f6c63430008140033",
  "libraries": {},
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}