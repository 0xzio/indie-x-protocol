{
  "address": "0x842afFA0dbbdA4c2e04694b5D3209359fe417e4d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xb21cddbe0a0170b64637bd19af5930d12604bb6bce71b88cd1c377fbf0fb3630",
  "receipt": {
    "to": null,
    "from": "0xE20a326A739fD15E5C6C830F74078cF4a42c52B9",
    "contractAddress": "0x842afFA0dbbdA4c2e04694b5D3209359fe417e4d",
    "transactionIndex": 1,
    "gasUsed": "601606",
    "logsBloom": "0x
    "blockHash": "0x43b156474eafb67c6e26f13af8d567b261611fe9ef71be0bc6c3af34f134dfbe",
    "transactionHash": "0xb21cddbe0a0170b64637bd19af5930d12604bb6bce71b88cd1c377fbf0fb3630",
    "logs": [],
    "blockNumber": 62771903,
    "cumulativeGasUsed": "601606",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "59b4aab3a0b93eb447aae00b1cd39346",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/curves/QuadraticCurve.sol\":\"QuadraticCurve\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":4294967295},\"remappings\":[]},\"sources\":{\"contracts/curves/QuadraticCurve.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"../interfaces/ICurve.sol\\\";\\n\\ncontract QuadraticCurve is ICurve {\\n  function getPrice(uint256 supply, uint256 amount) external pure override returns (uint256) {\\n    return (_curve(supply + amount) - _curve(supply)) / 1 ether / 1 ether / 50_000;\\n  }\\n\\n  function _curve(uint256 x) private pure returns (uint256) {\\n    return x * x * x;\\n  }\\n}\\n\",\"keccak256\":\"0x400197d143d230fda33536cdb33929a7c4c0b3bf83ef2ce693b306e06ebd035d\",\"license\":\"MIT\"},\"contracts/interfaces/ICurve.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\ninterface ICurve {\\n  struct Params {\\n    uint8 a;\\n    uint8 b;\\n    uint8 c;\\n    uint8 d;\\n    uint8 f;\\n    uint8 g;\\n  }\\n\\n  function getPrice(uint256 supply, uint256 amount) external pure returns (uint256);\\n}\\n\",\"keccak256\":\"0x69275c5785e56266a233545c0f057b034d5334471051ee9eec03cf7e69bd905f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101c6806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635cf4ee9114610030575b600080fd5b61004361003e3660046100c7565b610055565b60405190815260200160405180910390f35b600061c350670de0b6b3a76400008061006d866100b0565b61007f61007a8789610118565b6100b0565b610089919061012b565b610093919061013e565b61009d919061013e565b6100a7919061013e565b90505b92915050565b6000816100bd8180610179565b6100aa9190610179565b600080604083850312156100da57600080fd5b50508035926020909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156100aa576100aa6100e9565b818103818111156100aa576100aa6100e9565b600082610174577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b80820281158282048414176100aa576100aa6100e956fea26469706673582212208d42a36abfdec50173dff2dd514d8003f676f3091b843b76707177dd41ed47a664736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80635cf4ee9114610030575b600080fd5b61004361003e3660046100c7565b610055565b60405190815260200160405180910390f35b600061c350670de0b6b3a76400008061006d866100b0565b61007f61007a8789610118565b6100b0565b610089919061012b565b610093919061013e565b61009d919061013e565b6100a7919061013e565b90505b92915050565b6000816100bd8180610179565b6100aa9190610179565b600080604083850312156100da57600080fd5b50508035926020909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156100aa576100aa6100e9565b818103818111156100aa576100aa6100e9565b600082610174577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b80820281158282048414176100aa576100aa6100e956fea26469706673582212208d42a36abfdec50173dff2dd514d8003f676f3091b843b76707177dd41ed47a664736f6c63430008140033",
  "libraries": {},
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}